{"version":3,"sources":["core/_mixin.scss","main.css","main.scss","core/_config.scss","core/grid/flex/_mixin-flex.scss","core/_function.scss"],"names":[],"mappings":"AAsHI;EACI,UAAS;EACT,WAAU;CACb;;AACD;;EAEC,gBAAA;CCpHJ;;AAED;ECL2B,oBAAA;EACvB,+BAAY;EACZ,gCAAY;EAA6C,wDAAA;EAE5D,sEAAA;CDQA;;AAED;EDPQ,kBAAiB;EACjB,kBAAkB;EAItB,mBGRS;EHST,mBGTS;EDGZ,oBAAA;CDaA;;AAED;EGzBI,qBAAe;EAAf,cAAe;EJ0Bf,oBAAa;MAAb,gBAAa;EACb,uBAAyB;EEdzB,wBAAiB;EACjB,kBAAkB;EAmDrB,mBAAA;CDjCA;;AAED;EChBQ,YAAa;EACb,oBAAgB;EAChB,iBAAkB;EAClB,mBAAmB;EAItB,oBAAA;CDeJ;;AAED;EClBS,YAAA;CDoBR;;AAED;EClBQ,iDAAe;EACf,gBAAiB;EACjB,kBAAc;EACd,eAAe;EACf,mBAAoB;EACvB,iDAAA;CDoBJ;;AAED;ECnBQ,aAAa;EACb,uEAAe;EACf,gBAAc;EAWjB,eAAA;CDWJ;;AAED;ECrBY,iDAAc;EACd,eAAe;EACf,gBAAe;EACf,mBAAmB;EACnB,oBAAkB;EAClB,mBAAe;EACf,iCAAqB;EACxB,sBAAA;CDuBR;;AAED;ECrBQ,YAAS;EACT,mBAAQ;EACR,0BAAkB;EAClB,mBAAe;EAClB,gBAAA;CDuBJ;;AAED;ECtBQ,mBAAQ;EACR,SAAS;EACT,UAAU;EACV,WAAW;EACX,gBAAW;EACd,qCAAA;MAAA,iCAAA;CDwBJ;;AAED;EDpDQ,sBAAwB;EACxB,uBAAsB;EAK1B,uBAAqB;EAYjB,sBKvBqB;EHoC5B,gBAAA;CD2BA;;AAED;ED5DQ,sBAAwB;EACxB,uBAAsB;EAK1B,uBAAqB;EAYjB,sBKvBqB;EHwC5B,gBAAA;CD+BA;;AAED;EC9BI,cAAY;EACZ,oBAAmB;EACnB,oBAAQ;EACR,6BAA6B;EAoEhC,uDAAA;CDnCA;;AAED;EC/BQ,eAAe;EACf,iCAAoB;EACpB,qBAAkB;EAClB,mBAAoB;EACpB,4CAAoB;EACpB,qBAAe;EACf,gBAAe;EAClB,oBAAA;CDiCJ;;AAED;EChCQ,mBAAY;EACf,0EAAA;CDkCJ;;AAED;ECjCQ,kBAAY;EACf,yEAAA;CDmCJ;;AAED;EClCQ,eAAU;EACV,WAAW;EACX,kBAAkB;EAClB,mBAAa;EACb,iDAAe;EACf,gBAAe;EAoBlB,oBAAA;CDiBJ;;AAED;ECpCY,sBAAW;EACd,YAAA;CDsCR;;AAED;ECrCY,iCAAiB;EACjB,kBAAkB;EAClB,mBAAgB;EAChB,iBAAa;EACb,cAAA;EACA,8BAAmB;EACtB,oBAAA;CDuCR;;AAED;ECnCS,WAAA;CDqCR;;AAED;ECxCa,6BAAA;CD0CZ;;AAED;ECvCQ,eAAU;EACV,WAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,mBAAgB;EAChB,0BAAY;EACZ,aAAa;EACb,cAAA;EACA,0BAAW;EACX,YAAW;EACX,gBAAa;EACb,iDAAe;EACf,gBAAc;EAIjB,eAAA;CDsCJ;;AAED;ECzCS,0BAAA;CD2CR","file":"style.css","sourcesContent":["@charset \"utf-8\";\r\n\r\n                //============ Миксины сетки ================//\r\n\r\n// Миксин определяет основную обертку сайта\r\n// Параметр $alignment отвечает зацентрирование. \r\n// Возможные варианты center - выровняет по центру, right - выровняет по правому краю, по умолчанию выравнивает по левому краю.\r\n// Параметр $width - не обязательный параметр. Задает максимальную ширину блока.\r\n// ВНИМАНИЕ!!! При использовании параметра $width глобальная переменная $wrapper будет выставлена в это значение.\r\n@mixin wrapper ($alignment: center, $width: $wrapper-width) {\r\n    max-width: setWidth($width);\r\n    @if($alignment == 'center') {\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }@else if ($alignment == 'right') {\r\n        margin-left: auto;\r\n    }\r\n    padding-left: $fields;\r\n    padding-right: $fields;\r\n}\r\n\r\n// Миксин создания строки. В зависимости от типа сетки в настройках \r\n@mixin row() {\r\n    @if($grid == 'flex') {\r\n        @include row-flex();\r\n    }@else if($grid == 'inline-block') {\r\n        @include row-inline();\r\n    }\r\n    margin-left: $ofset / -2;\r\n    margin-right: $ofset / -2;\r\n}\r\n// миксин создания колонок\r\n// Принимает один параметр булевского типа: true - делать столбцы с отступами, false - без отступов\r\n// По умолчанию true\r\n@mixin col($indent: true) {\r\n    @if($grid == 'inline-block') {\r\n        @include col-inline();\r\n    }\r\n    @if($indent) {\r\n        margin-left: $ofset / 2;\r\n        margin-right: $ofset / 2;\r\n        box-sizing: border-box;\r\n    }@else {\r\n        padding-left: $ofset / 2;\r\n        padding-right: $ofset / 2;\r\n    }\r\n    word-wrap: break-word;\r\n    \r\n}\r\n//размер колонок\r\n// Принимает два параметра: первый(обязательный) - количество занимаемых колонок в сетке, второй - размер экрана для медиа запроса\r\n// $media - может быть числом или списком из двух чисел, в последнем случае означает минимальное и максимальное значения для медиа запроса\r\n@mixin col-size($n, $media: false) {\r\n    @if($media != false) {\r\n        @include adaptive($media) {\r\n            width: getColSize($n);\r\n        }\r\n    }@else {\r\n        width: getColSize($n);\r\n    }\r\n}\r\n// Миксин горизонтального выравнивания столбцов в строке. Применяется к строке.\r\n// Для flex сетки доступны все значения свойства justify-content.\r\n// Для сетки inline-block доступны все значения свойства text-align.\r\n@mixin h-align($value) {\r\n    @if($grid == 'inline-block') {\r\n        @include h-align-inline($value);\r\n    }@else if($grid == 'flex') {\r\n        @include h-align-flex($value);\r\n    }\r\n}\r\n\r\n// Миксин вертикального выравнивания столбцов в строке. Применяется к строке в случае flex сетки и к столбцам в случае inline-block.\r\n// Для flex сетки доступны все значения свойства align-items.\r\n// Для сетки inline-block доступны все значения свойства vertical-align.\r\n@mixin v-align($value) {\r\n    @if($grid == 'inline-block') {\r\n        @include v-align-inline($value);\r\n    }@else if($grid == 'flex') {\r\n        @include v-align-flex($value);\r\n    }\r\n}\r\n\r\n                //============== Миксины адаптива ================//\r\n// Миксин устанавливает медиа запрос \r\n// Принимает один обязательный параметр.\r\n// В случае передачи  одного строкового значения, будет сгенерирован меди запрос с установленным типом устройства в это значение.\r\n// В случае передачи  одного числового значения, будет сгенерирован меди запрос с установленным max-width в это значение.\r\n// В случае передачи 2х числовых значений через пробел, будет сгенерирован медиа запрос \r\n// на основе \"(min-width: $value_2) and (max-width: $value_1)\"\r\n// !!!!!Единицы измерения в контрольных значениях можно не указывать, в этом случае используются единицы указанные в $media-unit.\r\n@mixin adaptive($media) {\r\n    @if(length($media) == 1 and type-of(nth($media, 1)) == string) {\r\n        $type: nth($media, 1);\r\n        @media #{$type} {\r\n            @content;\r\n        }\r\n    }\r\n    @if(type-of(nth($media, 1)) == number) {\r\n        $media: chekUnit($media); // функция дописывает $media-unit, если не указаны единицы измерения.\r\n        @if(length($media) == 2) {\r\n            @media only screen and (min-width: nth($media, 2) + 1) and (max-width: nth($media, 1) - 1) {\r\n                @content;\r\n            }\r\n        }@else {\r\n            @media only screen and (max-width: nth($media, 1)) {\r\n                @content;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n                 //================== Миксины общего назначения ==================//\r\n\r\n// миксин сброса стилей\r\n@mixin reset() {\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    html, body {\r\n        font-size: $base-font-size;\r\n    }\r\n}\r\n\r\n// Скрывает визуальное содержимое элемента, оставляя его доступным для чтения читалкам и роботам.\r\n@mixin visual-hidden() {\r\n    &:not(:focus):not(:active) {\r\n        position: absolute;\r\n\r\n        width: 1px;\r\n        height: 1px;\r\n        margin: -1px;\r\n        border: 0;\r\n        padding: 0;\r\n\r\n        white-space: nowrap;\r\n\r\n        clip-path: inset(100%);\r\n        clip: rect(0 0 0 0);\r\n        overflow: hidden;\r\n    }\r\n}\r\n\r\n//дебагер\r\n@mixin debug($background, $outline) {\r\n    height: 100vh;\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n    > div {\r\n        @include wrapper(center);\r\n        height: inherit;\r\n        > div {\r\n            @include row();\r\n            height: inherit;\r\n            > div {\r\n                height: inherit;\r\n                @include col();\r\n                @include col-size(1);\r\n                background-color: $background;\r\n                outline: $outline;\r\n            }\r\n        }\r\n    }\r\n}\r\n","* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml,\nbody {\n  font-size: 16px;\n}\n\nbody {\n  background: #808080;\n  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #3fada8, #808080);\n  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #3fada8, #808080);\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n.wrap {\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n.user {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -1.28205%;\n  margin-right: -1.28205%;\n  margin-top: 100px;\n  position: relative;\n}\n\n.user_avatar {\n  float: left;\n  border-radius: 10px;\n  overflow: hidden;\n  margin-right: 40px;\n  margin-bottom: 30px;\n}\n\n.user_avatar img {\n  width: 100%;\n}\n\n.user_fio {\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 18px;\n  font-weight: bold;\n  color: #34495E;\n  margin-bottom: 8px;\n  text-shadow: 0px 1px 2px rgba(0, 209, 255, 0.56);\n}\n\n.user_balans {\n  float: right;\n  font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\n  font-size: 25px;\n  color: #16A085;\n}\n\n.user_balans span.text {\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  color: #34495E;\n  font-size: 18px;\n  padding-right: 5px;\n  padding-bottom: 5px;\n  margin-right: 10px;\n  border-bottom: 1px solid #34495E;\n  display: inline-block;\n}\n\n.user .updateBalabs {\n  float: left;\n  padding: 10px 15px;\n  border: 1px solid #34495E;\n  border-radius: 3px;\n  cursor: pointer;\n}\n\n.user_updateDateError {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  color: red;\n  font-size: 30px;\n  transform: translate(-50%, -50%);\n}\n\n.data {\n  margin-left: 1.28205%;\n  margin-right: 1.28205%;\n  box-sizing: border-box;\n  word-wrap: break-word;\n  width: 47.4359%;\n}\n\n.input-data {\n  margin-left: 1.28205%;\n  margin-right: 1.28205%;\n  box-sizing: border-box;\n  word-wrap: break-word;\n  width: 47.4359%;\n}\n\n.dataBox {\n  padding: 30px;\n  background: #ADA996;\n  border-radius: 20px;\n  border: 5px solid whitesmoke;\n  box-shadow: 0px 0px 40px 0px rgba(194, 220, 226, 0.91);\n}\n\n.dataBox_header {\n  color: dimgray;\n  border-bottom: 1px solid dimgray;\n  padding-bottom: 10px;\n  padding-left: 10px;\n  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);\n  font-family: Verdana;\n  font-size: 18px;\n  margin-bottom: 20px;\n}\n\n.dataBox--left {\n  border-right: none;\n  background: linear-gradient(to right, #EAEAEA, #DBDBDB, #F2F2F2, #ADA996);\n}\n\n.dataBox--right {\n  border-left: none;\n  background: linear-gradient(to left, #EAEAEA, #DBDBDB, #F2F2F2, #ADA996);\n}\n\n.dataBox label {\n  display: block;\n  width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 16px;\n  margin-bottom: 10px;\n}\n\n.dataBox label span {\n  display: inline-block;\n  width: 80px;\n}\n\n.dataBox label input {\n  border-bottom: 1px solid dimgray;\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  outline: none;\n  background-color: transparent;\n  padding-bottom: 5px;\n}\n\n.dataBox label.incorrect {\n  color: red;\n}\n\n.dataBox label.incorrect input {\n  border-bottom: 1px solid red;\n}\n\n.dataBox input[type=submit] {\n  display: block;\n  width: 60%;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  text-transform: uppercase;\n  border: none;\n  outline: none;\n  background-color: #BDC3C7;\n  color: #FFF;\n  font-size: 16px;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  cursor: pointer;\n  margin: 0 auto;\n}\n\n.dataBox input[type=submit]:hover {\n  background-color: #6C7A89;\n}","@import \"core/includes\";\r\n\r\n@include reset();\r\n\r\nbody {\r\n    background: #808080;  /* fallback for old browsers */\r\n    background: -webkit-linear-gradient(to right, #3fada8, #808080);  /* Chrome 10-25, Safari 5.1-6 */\r\n    background: linear-gradient(to right, #3fada8, #808080); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n}\r\n.wrap {\r\n    @include wrapper(center);\r\n}\r\n.user {\r\n    @include row();\r\n    margin-top: 100px;\r\n    position: relative;\r\n\r\n    &_avatar {\r\n        float: left;\r\n        border-radius: 10px;\r\n        overflow: hidden;\r\n        margin-right: 40px;\r\n        margin-bottom: 30px;\r\n        img {\r\n            width: 100%;\r\n        }\r\n    }\r\n    &_fio {\r\n        font-family: Tahoma, Geneva, Verdana, sans-serif;\r\n        font-size: 18px;\r\n        font-weight: bold;\r\n        color: #34495E;\r\n        margin-bottom: 8px; \r\n        text-shadow: 0px 1px 2px rgba(0, 209, 255, 0.56);\r\n    }\r\n    &_balans {\r\n        float: right;\r\n        font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\r\n        font-size: 25px;\r\n        color: #16A085;\r\n        & span.text {\r\n            font-family: Tahoma, Geneva, Verdana, sans-serif;;\r\n            color: #34495E;\r\n            font-size: 18px;\r\n            padding-right: 5px;\r\n            padding-bottom: 5px;\r\n            margin-right: 10px;\r\n            border-bottom: 1px solid #34495E;\r\n            display: inline-block;\r\n        }\r\n    }\r\n    & .updateBalabs {\r\n        float: left;\r\n        padding: 10px 15px;\r\n        border: 1px solid #34495E;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n    }\r\n    &_updateDateError {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        color: red;\r\n        font-size: 30px;\r\n        transform: translate(-50%, -50%);\r\n    } \r\n}\r\n.data {\r\n    @include col();\r\n    @include col-size(6);\r\n}\r\n.input-data {\r\n    @include col();\r\n    @include col-size(6);\r\n}\r\n.dataBox {\r\n    padding: 30px;\r\n    background: #ADA996;\r\n    border-radius: 20px;\r\n    border: 5px solid whitesmoke;\r\n    box-shadow: 0px 0px 40px 0px rgba(194, 220, 226, 0.91);\r\n    \r\n    &_header {\r\n        color: rgba(105, 105, 105, 1);\r\n        border-bottom: 1px solid rgba(105, 105, 105, 1);\r\n        padding-bottom: 10px;\r\n        padding-left: 10px;\r\n        text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);\r\n        font-family: Verdana;\r\n        font-size: 18px;\r\n        margin-bottom: 20px;\r\n    }\r\n    &--left {\r\n        border-right: none;\r\n        background: linear-gradient(to right, #EAEAEA, #DBDBDB, #F2F2F2, #ADA996);\r\n    }\r\n    &--right {\r\n        border-left: none;\r\n        background: linear-gradient(to left, #EAEAEA, #DBDBDB, #F2F2F2, #ADA996);\r\n    }\r\n    & label {\r\n        display: block;\r\n        width: 80%;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        font-family: Tahoma, Geneva, Verdana, sans-serif;\r\n        font-size: 16px;\r\n        margin-bottom: 10px; \r\n        span {\r\n            display: inline-block;\r\n            width: 80px;\r\n        }\r\n        input {\r\n            border-bottom: 1px solid rgba(105, 105, 105, 1);\r\n            border-left: none;\r\n            border-right: none;\r\n            border-top: none;\r\n            outline: none;\r\n            background-color: transparent;\r\n            padding-bottom: 5px;\r\n        }\r\n        &.incorrect {\r\n            color: red;\r\n            input {\r\n                border-bottom: 1px solid red;\r\n            }\r\n        }\r\n    }\r\n    & input[type=submit] {\r\n        display: block;\r\n        width: 60%;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        border: none;\r\n        outline: none;\r\n        background-color: #BDC3C7;\r\n        color: #FFF;\r\n        font-size: 16px;\r\n        font-family: Tahoma, Geneva, Verdana, sans-serif;\r\n        cursor: pointer;\r\n        margin: 0 auto;\r\n        &:hover {\r\n            background-color: #6C7A89;\r\n        }\r\n    }\r\n\r\n}","\r\n//============ Настройки сетки ============ \r\n// ширина основного враппера                                     \r\n$wrapper-width: 1170px;                                                          \r\n\r\n//количество колонок                     \r\n$column: 12;    \r\n\r\n// поля сйта                       \r\n$fields: 15px; \r\n\r\n// межколоночник (number)\r\n$ofset: 30px; \r\n\r\n// Перевести межколоночник в % (bool)\r\n$ofset-percent: true;\r\n\r\n// Единица измерения в медиа запросе (string)\r\n$media-unit: \"px\";\r\n\r\n// Преречислять селекторы с одинаковыми стилями  через запяую (bool) (!!! В разработке, не использовать)\r\n$combine-selectors: false;\r\n\r\n// базовый размер шрифта (number)\r\n$base-font-size: 16px;\r\n\r\n// тип сетки  Доступные типы сеток: \"flex\", \"inline-block\".\r\n$grid: 'flex';\r\n\r\n\r\n\r\n\r\n\r\n","@mixin row-mixin() {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n%row-extend {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n@mixin row-flex() {\r\n    @if($combine-selectors) {\r\n        @extend %row-extend;\r\n    }@else {\r\n        @include row-mixin();\r\n    }\r\n}\r\n@mixin h-align-flex($value) {\r\n    justify-content: $value;\r\n}\r\n@mixin v-align-flex($value) {\r\n    align-items: $value;\r\n}","// считает размер шрифта относитель размера области просмотра с заданной пропорцией\r\n@function bridge($y1, $y2, $w-max, $w-min) {\r\n    $m: ($y2 - $y1)/($w-max - $w-min);\r\n    $b: $y1 - $m * $w-min;\r\n    $m: $m*100vw; \r\n    $y: \"calc(#{$m} + #{$b})\";\r\n    @return unquote($y);\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//=== Функции для нового движка сетки ===//\r\n\r\n// перезаписывает глобальную переменну $wrapper. Вызывается в миксине wrapper();\r\n@function setWidth($new-width) {\r\n    $wrapper-width: $new-width !global;\r\n    @return $wrapper-width; \r\n}\r\n\r\n// Конвертирует межколоночник в проценты\r\n@function ofsetConvert($value) {\r\n    @return $value / $wrapper-width * 100%;\r\n}\r\n\r\n// Рассчитывает ширину колонки\r\n@function getColSize($n) {\r\n    $size: 100% / $column * $n;\r\n    @if(unit($ofset) != \"%\") {\r\n        $size: calc(#{$size} - #{$ofset});\r\n    } @else {\r\n        $size: $size - $ofset;\r\n    }\r\n    @return $size;\r\n}\r\n\r\n// Проверяет текущие настройки  сетки\r\n@function chekOptions() {\r\n    $options-correct: true;\r\n    @if($grid != 'flex' and $grid != 'inline-block') {\r\n        $options-correct: false;\r\n        @error \"Доступные типы сетки: 'flex', 'inline-block'. Текущее значение - '#{$grid}' не допустимо!\";\r\n    }\r\n    @if(unit($ofset) != \"px\" and unit($ofset) != \"%\") {\r\n        $options-correct: false;\r\n        @error \"Следует указывать  $ofset в 'px' или '%'. Текущее значение - '#{unit($ofset)}' не допустимо!\";\r\n    }\r\n    @if(unit($base-font-size) != \"px\") {\r\n        $options-correct: false;\r\n        @error \"Следует указывать  $base-font-size только 'px'\";\r\n    }\r\n    @if(type-of($media-unit) != string) {\r\n        $options-correct: false;\r\n        @error \"$media-unit должна быть строкой, текущее значение:  #{$media-unit} - #{type-of($media-unit)}\";\r\n    }\r\n    @if(type-of($combine-selectors) != bool) {\r\n         @error \"$combine-selectors должна true или false, текущее значение:  #{$combine-selectors} - #{type-of($combine-selectors)}\";\r\n    }\r\n    @return $options-correct;\r\n}\r\n\r\n// Проверяет входные параметры дя миксина adaptive\r\n@function chekUnit($media) {\r\n    $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';\r\n    $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;\r\n    $tmp: ();\r\n    @each $key in $media {\r\n        @if(unitless($key)) {\r\n            //$key: $key *  $media-unit;\r\n            $index: index($strings, $media-unit);\r\n            @if not $index {\r\n                @error \"Unknown unit `#{$media-unit}`.\";\r\n            }\r\n            $key: $key * nth($units, $index);\r\n        }\r\n        $tmp: append($tmp, $key);  \r\n    }\r\n    @return $tmp; \r\n}\r\n\r\n$options-correct: chekOptions() !global;\r\n\r\n\r\n@if($ofset-percent) {\r\n    $ofset: ofsetConvert($ofset) !global;\r\n}"]}